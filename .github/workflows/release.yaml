name: Create Release

on:
  push:
    branches:
      - master
permissions:
  contents: write
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get current release version
        id: get_version
        run: echo "::set-output name=version::$(cat version.txt)"
      - name: Increment release version
        id: increment_version
        uses: actions/github-script@v4
        with:
          script: |
            const fs = require("fs");

            // Specify the file path
            const filePath = "./CHANGELOG.md";

            // Read the file contents
            fs.readFile(filePath, "utf8", (err, data) => {
              if (err) {
                console.error(err);
                return;
              }

              // Store the changelog entries as an object
              const changelog = {};

              // Split the data by new lines
              const lines = data.split("\n");

              // Iterate through each line
              let currentVersion = "";
              lines.forEach((line) => {
                // Check if the line is a version heading
                if (line.startsWith("## ")) {
                  // Remove the '## ' characters and trim any leading/trailing spaces
                  currentVersion = line.replace("## ", "").trim();
                  if (currentVersion !== "") {
                    changelog[currentVersion] = "";
                  }
                } else {
                  // Append the line to the current version's description
                  if (currentVersion !== "") {
                    changelog[currentVersion] += line + "\n";
                  }
                }
              });

              // Use the changelog object as needed
              core.setOutput('new_version', Object.keys(changelog)[0]);
            });

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Pypox
          release_name: Release ${{ steps.increment_version.outputs.new_version }}
          body_path: CHANGELOG.md
          draft: true
          prerelease: true
